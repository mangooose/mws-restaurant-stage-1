{"version":3,"file":"main.min.js","sources":["../src/js/dbhelper.js","../src/js/main.js"],"sourcesContent":["/**\r\n * Common database helper functions.\r\n */\r\nclass DBHelper {\r\n  /**\r\n   * Database URL.\r\n   * Change this to restaurants.json file location on your server.\r\n   */\r\n  static get DATABASE_URL() {\r\n    const port = 1337; // Change this to your server port\r\n    return `http://localhost:${port}/restaurants`;\r\n  }\r\n\r\n  /**\r\n   * Fetch all restaurants.\r\n   */\r\n  static fetchRestaurants(callback) {\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open(\"GET\", DBHelper.DATABASE_URL);\r\n    xhr.onload = () => {\r\n      if (xhr.status === 200) {\r\n        // Got a success response from server!\r\n        const json = JSON.parse(xhr.responseText);\r\n        console.log(json);\r\n        const restaurants = json;\r\n\r\n        idbKeyval.set(\"restaurants\", JSON.stringify(restaurants));\r\n\r\n        callback(null, restaurants);\r\n      } else {\r\n        idbKeyval.get(\"restaurants\").then(restaurants => {\r\n          callback(null, JSON.parse(restaurants));\r\n          console.log(JSON.parse(restaurants));\r\n        });\r\n        // Oops!. Got an error from server.\r\n        const error = `Request failed. Returned status of ${xhr.status}`;\r\n        callback(error, null);\r\n      }\r\n    };\r\n    xhr.onerror = e => {\r\n      console.log(e);\r\n      idbKeyval.get(\"restaurants\").then(restaurants => {\r\n        callback(null, JSON.parse(restaurants));\r\n        console.log(JSON.parse(restaurants));\r\n      });\r\n    };\r\n    xhr.send();\r\n  }\r\n\r\n  /**\r\n   * Fetch a restaurant by its ID.\r\n   */\r\n  static fetchRestaurantById(id, callback) {\r\n    // fetch all restaurants with proper error handling.\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        const restaurant = restaurants.find(r => r.id == id);\r\n        if (restaurant) {\r\n          // Got the restaurant\r\n          callback(null, restaurant);\r\n        } else {\r\n          // Restaurant does not exist in the database\r\n          callback(\"Restaurant does not exist\", null);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a cuisine type with proper error handling.\r\n   */\r\n  static fetchRestaurantByCuisine(cuisine, callback) {\r\n    // Fetch all restaurants  with proper error handling\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given cuisine type\r\n        const results = restaurants.filter(r => r.cuisine_type == cuisine);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a neighborhood with proper error handling.\r\n   */\r\n  static fetchRestaurantByNeighborhood(neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given neighborhood\r\n        const results = restaurants.filter(r => r.neighborhood == neighborhood);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n   */\r\n  static fetchRestaurantByCuisineAndNeighborhood(\r\n    cuisine,\r\n    neighborhood,\r\n    callback\r\n  ) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        let results = restaurants;\r\n        if (cuisine != \"all\") {\r\n          // filter by cuisine\r\n          results = results.filter(r => r.cuisine_type == cuisine);\r\n        }\r\n        if (neighborhood != \"all\") {\r\n          // filter by neighborhood\r\n          results = results.filter(r => r.neighborhood == neighborhood);\r\n        }\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all neighborhoods with proper error handling.\r\n   */\r\n  static fetchNeighborhoods(callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all neighborhoods from all restaurants\r\n        console.log(restaurants);\r\n        const neighborhoods = restaurants.map(\r\n          (v, i) => restaurants[i].neighborhood\r\n        );\r\n        // Remove duplicates from neighborhoods\r\n        const uniqueNeighborhoods = neighborhoods.filter(\r\n          (v, i) => neighborhoods.indexOf(v) == i\r\n        );\r\n        callback(null, uniqueNeighborhoods);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all cuisines with proper error handling.\r\n   */\r\n  static fetchCuisines(callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all cuisines from all restaurants\r\n        const cuisines = restaurants.map((v, i) => restaurants[i].cuisine_type);\r\n        // Remove duplicates from cuisines\r\n        const uniqueCuisines = cuisines.filter(\r\n          (v, i) => cuisines.indexOf(v) == i\r\n        );\r\n        callback(null, uniqueCuisines);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Restaurant page URL.\r\n   */\r\n  static urlForRestaurant(restaurant) {\r\n    return `./restaurant.html?id=${restaurant.id}`;\r\n  }\r\n\r\n  /**\r\n   * Restaurant image URL.\r\n   */\r\n  static imageUrlForRestaurant(restaurant) {\r\n    if (restaurant.photograph) return `/img/${restaurant.photograph}.jpg`;\r\n    return `/img/default.jpg`;\r\n  }\r\n\r\n  /**\r\n   * Map marker for a restaurant.\r\n   */\r\n  static mapMarkerForRestaurant(restaurant, map) {\r\n    const marker = new google.maps.Marker({\r\n      position: restaurant.latlng,\r\n      title: restaurant.name,\r\n      url: DBHelper.urlForRestaurant(restaurant),\r\n      map: map,\r\n      animation: google.maps.Animation.DROP\r\n    });\r\n    return marker;\r\n  }\r\n}\r\n\r\nexport default DBHelper;\r\n","import DBHelper from \"./dbhelper\";\r\n\r\nconsole.log(DBHelper);\r\nlet restaurants, neighborhoods, cuisines;\r\nvar map;\r\nvar markers = [];\r\n\r\n/**\r\n * Fetch neighborhoods and cuisines as soon as the page is loaded.\r\n */\r\ndocument.addEventListener(\"DOMContentLoaded\", event => {\r\n  fetchNeighborhoods();\r\n  fetchCuisines();\r\n});\r\n\r\n/**\r\n * Fetch all neighborhoods and set their HTML.\r\n */\r\nfetchNeighborhoods = () => {\r\n  DBHelper.fetchNeighborhoods((error, neighborhoods) => {\r\n    if (error) {\r\n      // Got an error\r\n      console.error(error);\r\n    } else {\r\n      self.neighborhoods = neighborhoods;\r\n      fillNeighborhoodsHTML();\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Set neighborhoods HTML.\r\n */\r\nfillNeighborhoodsHTML = (neighborhoods = self.neighborhoods) => {\r\n  const select = document.getElementById(\"neighborhoods-select\");\r\n  neighborhoods.forEach(neighborhood => {\r\n    const option = document.createElement(\"option\");\r\n    option.innerHTML = neighborhood;\r\n    option.value = neighborhood;\r\n    select.append(option);\r\n  });\r\n};\r\n\r\n/**\r\n * Fetch all cuisines and set their HTML.\r\n */\r\nfetchCuisines = () => {\r\n  DBHelper.fetchCuisines((error, cuisines) => {\r\n    if (error) {\r\n      // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      self.cuisines = cuisines;\r\n      fillCuisinesHTML();\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Set cuisines HTML.\r\n */\r\nfillCuisinesHTML = (cuisines = self.cuisines) => {\r\n  const select = document.getElementById(\"cuisines-select\");\r\n\r\n  cuisines.forEach(cuisine => {\r\n    const option = document.createElement(\"option\");\r\n    option.innerHTML = cuisine;\r\n    option.value = cuisine;\r\n    select.append(option);\r\n  });\r\n};\r\n\r\n/**\r\n * Initialize Google map, called from HTML.\r\n */\r\nwindow.initMap = () => {\r\n  if (!navigator.onLine) return;\r\n  let loc = {\r\n    lat: 40.722216,\r\n    lng: -73.987501\r\n  };\r\n  self.map = new google.maps.Map(document.getElementById(\"map\"), {\r\n    zoom: 12,\r\n    center: loc,\r\n    scrollwheel: false\r\n  });\r\n  updateRestaurants();\r\n};\r\n\r\n/**\r\n * Update page and map for current restaurants.\r\n */\r\nupdateRestaurants = () => {\r\n  const cSelect = document.getElementById(\"cuisines-select\");\r\n  const nSelect = document.getElementById(\"neighborhoods-select\");\r\n\r\n  const cIndex = cSelect.selectedIndex;\r\n  const nIndex = nSelect.selectedIndex;\r\n\r\n  const cuisine = cSelect[cIndex].value;\r\n  const neighborhood = nSelect[nIndex].value;\r\n\r\n  DBHelper.fetchRestaurantByCuisineAndNeighborhood(\r\n    cuisine,\r\n    neighborhood,\r\n    (error, restaurants) => {\r\n      if (error) {\r\n        // Got an error!\r\n        console.error(error);\r\n      } else {\r\n        resetRestaurants(restaurants);\r\n        fillRestaurantsHTML();\r\n      }\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * Clear current restaurants, their HTML and remove their map markers.\r\n */\r\nresetRestaurants = restaurants => {\r\n  // Remove all restaurants\r\n  self.restaurants = [];\r\n  const ul = document.getElementById(\"restaurants-list\");\r\n  ul.innerHTML = \"\";\r\n\r\n  // Remove all map markers\r\n  self.markers.forEach(m => m.setMap(null));\r\n  self.markers = [];\r\n  self.restaurants = restaurants;\r\n};\r\n\r\n/**\r\n * Create all restaurants HTML and add them to the webpage.\r\n */\r\nfillRestaurantsHTML = (restaurants = self.restaurants) => {\r\n  const ul = document.getElementById(\"restaurants-list\");\r\n  restaurants.forEach(restaurant => {\r\n    ul.append(createRestaurantHTML(restaurant));\r\n  });\r\n  addMarkersToMap();\r\n};\r\n\r\n/**\r\n * Create restaurant HTML.\r\n */\r\ncreateRestaurantHTML = restaurant => {\r\n  const li = document.createElement(\"li\");\r\n  const picture = document.createElement(\"picture\");\r\n\r\n  const source = document.createElement(\"source\");\r\n  source.dataset.srcset = `${DBHelper.imageUrlForRestaurant(restaurant).replace(\r\n    \".jpg\",\r\n    \"_small.webp\"\r\n  )} 375w, ${DBHelper.imageUrlForRestaurant(restaurant).replace(\r\n    \".jpg\",\r\n    \"_medium.webp\"\r\n  )} 480w, ${DBHelper.imageUrlForRestaurant(restaurant).replace(\r\n    \".jpg\",\r\n    \"_large.webp\"\r\n  )} 800w  `;\r\n  const image = document.createElement(\"img\");\r\n  image.className = \"restaurant-img lazyload\";\r\n  image.tabIndex = 0;\r\n  image.alt = `${restaurant.name} restaurant`;\r\n  image.dataset.src = DBHelper.imageUrlForRestaurant(restaurant);\r\n  picture.appendChild(source);\r\n  picture.append(image);\r\n  li.append(picture);\r\n\r\n  const details = document.createElement(\"div\");\r\n  details.className = \"restaurant-item\";\r\n  const name = document.createElement(\"h2\");\r\n  name.innerHTML = restaurant.name;\r\n  name.tabIndex = 0;\r\n  details.append(name);\r\n\r\n  const neighborhood = document.createElement(\"p\");\r\n  neighborhood.innerHTML = restaurant.neighborhood;\r\n  neighborhood.tabIndex = 0;\r\n  details.append(neighborhood);\r\n\r\n  const address = document.createElement(\"p\");\r\n  address.innerHTML = restaurant.address;\r\n  address.tabIndex = 0;\r\n  details.append(address);\r\n\r\n  const more = document.createElement(\"a\");\r\n  more.innerHTML = \"View Details\";\r\n  more.setAttribute(\"role\", \"button\");\r\n  more.setAttribute(\"aria-label\", `View details about ${restaurant.name}`);\r\n  more.href = DBHelper.urlForRestaurant(restaurant);\r\n  details.append(more);\r\n  li.append(details);\r\n\r\n  return li;\r\n};\r\n\r\n/**\r\n * Add markers for current restaurants to the map.\r\n */\r\naddMarkersToMap = (restaurants = self.restaurants) => {\r\n  restaurants.forEach(restaurant => {\r\n    // Add marker to the map\r\n    const marker = DBHelper.mapMarkerForRestaurant(restaurant, self.map);\r\n    google.maps.event.addListener(marker, \"click\", () => {\r\n      window.location.href = marker.url;\r\n    });\r\n    self.markers.push(marker);\r\n  });\r\n};\r\n"],"names":[],"mappings":";;AAAA;;;AAGA,MAAM,QAAQ,CAAC;;;;;EAKb,WAAW,YAAY,GAAG;IACxB,MAAM,IAAI,GAAG,IAAI,CAAC;IAClB,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;GAC/C;;;;;EAKD,OAAO,gBAAgB,CAAC,QAAQ,EAAE;IAChC,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;IAC/B,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC;IACvC,GAAG,CAAC,MAAM,GAAG,MAAM;MACjB,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;;QAEtB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,MAAM,WAAW,GAAG,IAAI,CAAC;;QAEzB,SAAS,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;;QAE1D,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;OAC7B,MAAM;QACL,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI;UAC/C,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;UACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;SACtC,CAAC,CAAC;;QAEH,MAAM,KAAK,GAAG,CAAC,mCAAmC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACjE,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;OACvB;KACF,CAAC;IACF,GAAG,CAAC,OAAO,GAAG,CAAC,IAAI;MACjB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACf,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI;QAC/C,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;OACtC,CAAC,CAAC;KACJ,CAAC;IACF,GAAG,CAAC,IAAI,EAAE,CAAC;GACZ;;;;;EAKD,OAAO,mBAAmB,CAAC,EAAE,EAAE,QAAQ,EAAE;;IAEvC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAE,WAAW,KAAK;MAChD,IAAI,KAAK,EAAE;QACT,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;OACvB,MAAM;QACL,MAAM,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QACrD,IAAI,UAAU,EAAE;;UAEd,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;SAC5B,MAAM;;UAEL,QAAQ,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC;SAC7C;OACF;KACF,CAAC,CAAC;GACJ;;;;;EAKD,OAAO,wBAAwB,CAAC,OAAO,EAAE,QAAQ,EAAE;;IAEjD,QAAQ,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAE,WAAW,KAAK;MAChD,IAAI,KAAK,EAAE;QACT,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;OACvB,MAAM;;QAEL,MAAM,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,IAAI,OAAO,CAAC,CAAC;QACnE,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;OACzB;KACF,CAAC,CAAC;GACJ;;;;;EAKD,OAAO,6BAA6B,CAAC,YAAY,EAAE,QAAQ,EAAE;;IAE3D,QAAQ,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAE,WAAW,KAAK;MAChD,IAAI,KAAK,EAAE;QACT,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;OACvB,MAAM;;QAEL,MAAM,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,IAAI,YAAY,CAAC,CAAC;QACxE,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;OACzB;KACF,CAAC,CAAC;GACJ;;;;;EAKD,OAAO,uCAAuC;IAC5C,OAAO;IACP,YAAY;IACZ,QAAQ;IACR;;IAEA,QAAQ,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAE,WAAW,KAAK;MAChD,IAAI,KAAK,EAAE;QACT,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;OACvB,MAAM;QACL,IAAI,OAAO,GAAG,WAAW,CAAC;QAC1B,IAAI,OAAO,IAAI,KAAK,EAAE;;UAEpB,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,IAAI,OAAO,CAAC,CAAC;SAC1D;QACD,IAAI,YAAY,IAAI,KAAK,EAAE;;UAEzB,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,IAAI,YAAY,CAAC,CAAC;SAC/D;QACD,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;OACzB;KACF,CAAC,CAAC;GACJ;;;;;EAKD,OAAO,kBAAkB,CAAC,QAAQ,EAAE;;IAElC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAE,WAAW,KAAK;MAChD,IAAI,KAAK,EAAE;QACT,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;OACvB,MAAM;;QAEL,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,MAAM,aAAa,GAAG,WAAW,CAAC,GAAG;UACnC,CAAC,CAAC,EAAE,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,YAAY;SACtC,CAAC;;QAEF,MAAM,mBAAmB,GAAG,aAAa,CAAC,MAAM;UAC9C,CAAC,CAAC,EAAE,CAAC,KAAK,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;SACxC,CAAC;QACF,QAAQ,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;OACrC;KACF,CAAC,CAAC;GACJ;;;;;EAKD,OAAO,aAAa,CAAC,QAAQ,EAAE;;IAE7B,QAAQ,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAE,WAAW,KAAK;MAChD,IAAI,KAAK,EAAE;QACT,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;OACvB,MAAM;;QAEL,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;;QAExE,MAAM,cAAc,GAAG,QAAQ,CAAC,MAAM;UACpC,CAAC,CAAC,EAAE,CAAC,KAAK,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;SACnC,CAAC;QACF,QAAQ,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;OAChC;KACF,CAAC,CAAC;GACJ;;;;;EAKD,OAAO,gBAAgB,CAAC,UAAU,EAAE;IAClC,OAAO,CAAC,qBAAqB,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;GAChD;;;;;EAKD,OAAO,qBAAqB,CAAC,UAAU,EAAE;IACvC,IAAI,UAAU,CAAC,UAAU,EAAE,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACtE,OAAO,CAAC,gBAAgB,CAAC,CAAC;GAC3B;;;;;EAKD,OAAO,sBAAsB,CAAC,UAAU,EAAE,GAAG,EAAE;IAC7C,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;MACpC,QAAQ,EAAE,UAAU,CAAC,MAAM;MAC3B,KAAK,EAAE,UAAU,CAAC,IAAI;MACtB,GAAG,EAAE,QAAQ,CAAC,gBAAgB,CAAC,UAAU,CAAC;MAC1C,GAAG,EAAE,GAAG;MACR,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI;KACtC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;GACf;CACF;;ACtMD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,AAIA;;;AAGA,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,KAAK,IAAI;EACrD,kBAAkB,EAAE,CAAC;EACrB,aAAa,EAAE,CAAC;CACjB,CAAC,CAAC;;;;;AAKH,kBAAkB,GAAG,MAAM;EACzB,QAAQ,CAAC,kBAAkB,CAAC,CAAC,KAAK,EAAE,aAAa,KAAK;IACpD,IAAI,KAAK,EAAE;;MAET,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACtB,MAAM;MACL,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;MACnC,qBAAqB,EAAE,CAAC;KACzB;GACF,CAAC,CAAC;CACJ,CAAC;;;;;AAKF,qBAAqB,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,KAAK;EAC9D,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,sBAAsB,CAAC,CAAC;EAC/D,aAAa,CAAC,OAAO,CAAC,YAAY,IAAI;IACpC,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAChD,MAAM,CAAC,SAAS,GAAG,YAAY,CAAC;IAChC,MAAM,CAAC,KAAK,GAAG,YAAY,CAAC;IAC5B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;GACvB,CAAC,CAAC;CACJ,CAAC;;;;;AAKF,aAAa,GAAG,MAAM;EACpB,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,QAAQ,KAAK;IAC1C,IAAI,KAAK,EAAE;;MAET,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACtB,MAAM;MACL,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;MACzB,gBAAgB,EAAE,CAAC;KACpB;GACF,CAAC,CAAC;CACJ,CAAC;;;;;AAKF,gBAAgB,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,KAAK;EAC/C,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;;EAE1D,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAI;IAC1B,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAChD,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC;IAC3B,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC;IACvB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;GACvB,CAAC,CAAC;CACJ,CAAC;;;;;AAKF,MAAM,CAAC,OAAO,GAAG,MAAM;EACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO;EAC9B,IAAI,GAAG,GAAG;IACR,GAAG,EAAE,SAAS;IACd,GAAG,EAAE,CAAC,SAAS;GAChB,CAAC;EACF,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;IAC7D,IAAI,EAAE,EAAE;IACR,MAAM,EAAE,GAAG;IACX,WAAW,EAAE,KAAK;GACnB,CAAC,CAAC;EACH,iBAAiB,EAAE,CAAC;CACrB,CAAC;;;;;AAKF,iBAAiB,GAAG,MAAM;EACxB,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;EAC3D,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,sBAAsB,CAAC,CAAC;;EAEhE,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC;EACrC,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC;;EAErC,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;EACtC,MAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;;EAE3C,QAAQ,CAAC,uCAAuC;IAC9C,OAAO;IACP,YAAY;IACZ,CAAC,KAAK,EAAE,WAAW,KAAK;MACtB,IAAI,KAAK,EAAE;;QAET,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;OACtB,MAAM;QACL,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAC9B,mBAAmB,EAAE,CAAC;OACvB;KACF;GACF,CAAC;CACH,CAAC;;;;;AAKF,gBAAgB,GAAG,WAAW,IAAI;;EAEhC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;EACtB,MAAM,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;EACvD,EAAE,CAAC,SAAS,GAAG,EAAE,CAAC;;;EAGlB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;EAClB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;CAChC,CAAC;;;;;AAKF,mBAAmB,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,KAAK;EACxD,MAAM,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;EACvD,WAAW,CAAC,OAAO,CAAC,UAAU,IAAI;IAChC,EAAE,CAAC,MAAM,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,CAAC;GAC7C,CAAC,CAAC;EACH,eAAe,EAAE,CAAC;CACnB,CAAC;;;;;AAKF,oBAAoB,GAAG,UAAU,IAAI;EACnC,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;EACxC,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;;EAElD,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;EAChD,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,QAAQ,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC,OAAO;IAC3E,MAAM;IACN,aAAa;GACd,CAAC,OAAO,EAAE,QAAQ,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC,OAAO;IAC3D,MAAM;IACN,cAAc;GACf,CAAC,OAAO,EAAE,QAAQ,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC,OAAO;IAC3D,MAAM;IACN,aAAa;GACd,CAAC,OAAO,CAAC,CAAC;EACX,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;EAC5C,KAAK,CAAC,SAAS,GAAG,yBAAyB,CAAC;EAC5C,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;EACnB,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;EAC5C,KAAK,CAAC,OAAO,CAAC,GAAG,GAAG,QAAQ,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;EAC/D,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;EAC5B,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;EACtB,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;;EAEnB,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;EAC9C,OAAO,CAAC,SAAS,GAAG,iBAAiB,CAAC;EACtC,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;EAC1C,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC;EACjC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;EAClB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;EAErB,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;EACjD,YAAY,CAAC,SAAS,GAAG,UAAU,CAAC,YAAY,CAAC;EACjD,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC;EAC1B,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;;EAE7B,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;EAC5C,OAAO,CAAC,SAAS,GAAG,UAAU,CAAC,OAAO,CAAC;EACvC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;EACrB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;;EAExB,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;EACzC,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC;EAChC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;EACpC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,mBAAmB,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACzE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;EAClD,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;EACrB,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;;EAEnB,OAAO,EAAE,CAAC;CACX,CAAC;;;;;AAKF,eAAe,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,KAAK;EACpD,WAAW,CAAC,OAAO,CAAC,UAAU,IAAI;;IAEhC,MAAM,MAAM,GAAG,QAAQ,CAAC,sBAAsB,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACrE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM;MACnD,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;KACnC,CAAC,CAAC;IACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;GAC3B,CAAC,CAAC;CACJ,CAAC"}